{"version":3,"file":"controllers/azureResourceController.js","sourceRoot":"../src","sources":["controllers/azureResourceController.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,YAAY,CAAC;;AAEb,qDAA8C;AAS9C,0DAAuE;AACvE,qEAA+E;AAC/E,wDAA0E;AAC1E,6EAAuF;AACvF,uFAAiG;AACjG,mGAA6G;AAC7G,yEAAmF;AACnF,2EAAqF;AAErF,iFAAiH;AACjH,2EAAqG;AACrG,kDAAgD;AAEhD,6BAA6C,SAAQ,wBAAc;IAC3D,QAAQ;QACd,IAAI,CAAC,UAAU,CAAC,eAAe,CAA6B,qCAAyB,CAAC,YAAY,EAAE,IAAI,wCAAyB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAC1J,IAAI,CAAC,UAAU,CAAC,eAAe,CAA+B,qCAAyB,CAAC,cAAc,EAAE,IAAI,4CAA2B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAC1J,IAAI,CAAC,UAAU,CAAC,eAAe,CAAoC,qCAAyB,CAAC,mBAAmB,EAAE,IAAI,sDAAgC,EAAE,CAAC,CAAC;QAC1J,IAAI,CAAC,UAAU,CAAC,eAAe,CAA0C,qCAAyB,CAAC,yBAAyB,EAAE,IAAI,kEAAsC,CAAC,IAAI,wCAAyB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAChO,IAAI,CAAC,UAAU,CAAC,eAAe,CAA8B,qCAAyB,CAAC,aAAa,EAAE,IAAI,0CAA0B,EAAE,CAAC,CAAC;QAExI,MAAM,iBAAiB,GAAG,IAAI,wCAAyB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzE,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,wBAAwB,CAAC,uBAAuB,EAAE,iBAAiB,CAAC,CAAC,CAAC;QAE/H,IAAI,gBAAgB,GAAG,SAAS,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,UAAU,CAA+B,qCAAyB,CAAC,cAAc,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAA0B,EAAE,EAAE;YACrJ,qGAAqG;YACrG,8GAA8G;YAC9G,6DAA6D;YAC7D,IAAI,CAAC,cAAM,CAAC,CAAC,CAAC,QAAQ,EAAE,gBAAgB,CAAC,EAAE;gBAC1C,iBAAiB,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;aAC/C;YACD,gBAAgB,GAAG,CAAC,CAAC,QAAQ,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,wCAA6B,CAAC,IAAI,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;QAElE,sDAA2C,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE7D,gDAAqC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEvD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEM,UAAU;IACjB,CAAC;CACD;AAjCD,0CAiCC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the Source EULA. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport ControllerBase from './controllerBase';\nimport { DidChangeAccountsParams } from 'sqlops';\n\nimport {\n\tIAzureResourceCacheService,\n\tIAzureResourceAccountService,\n\tIAzureResourceSubscriptionService,\n\tIAzureResourceSubscriptionFilterService,\n\tIAzureResourceTenantService } from '../azureResource/interfaces';\nimport { AzureResourceServiceNames } from '../azureResource/constants';\nimport { AzureResourceTreeProvider } from '../azureResource/tree/treeProvider';\nimport { registerAzureResourceCommands } from '../azureResource/commands';\nimport { AzureResourceAccountService } from '../azureResource/services/accountService';\nimport { AzureResourceSubscriptionService } from '../azureResource/services/subscriptionService';\nimport { AzureResourceSubscriptionFilterService } from '../azureResource/services/subscriptionFilterService';\nimport { AzureResourceCacheService } from '../azureResource/services/cacheService';\nimport { AzureResourceTenantService } from '../azureResource/services/tenantService';\n\nimport { registerAzureResourceDatabaseServerCommands } from '../azureResource/providers/databaseServer/commands';\nimport { registerAzureResourceDatabaseCommands } from '../azureResource/providers/database/commands';\nimport { equals } from '../azureResource/utils';\n\nexport default class AzureResourceController extends ControllerBase {\n\tpublic activate(): Promise<boolean> {\n\t\tthis.appContext.registerService<IAzureResourceCacheService>(AzureResourceServiceNames.cacheService, new AzureResourceCacheService(this.extensionContext));\n\t\tthis.appContext.registerService<IAzureResourceAccountService>(AzureResourceServiceNames.accountService, new AzureResourceAccountService(this.apiWrapper));\n\t\tthis.appContext.registerService<IAzureResourceSubscriptionService>(AzureResourceServiceNames.subscriptionService, new AzureResourceSubscriptionService());\n\t\tthis.appContext.registerService<IAzureResourceSubscriptionFilterService>(AzureResourceServiceNames.subscriptionFilterService, new AzureResourceSubscriptionFilterService(new AzureResourceCacheService(this.extensionContext)));\n\t\tthis.appContext.registerService<IAzureResourceTenantService>(AzureResourceServiceNames.tenantService, new AzureResourceTenantService());\n\n\t\tconst azureResourceTree = new AzureResourceTreeProvider(this.appContext);\n\t\tthis.extensionContext.subscriptions.push(this.apiWrapper.registerTreeDataProvider('azureResourceExplorer', azureResourceTree));\n\n\t\tlet previousAccounts = undefined;\n\t\tthis.appContext.getService<IAzureResourceAccountService>(AzureResourceServiceNames.accountService).onDidChangeAccounts((e: DidChangeAccountsParams) => {\n\t\t\t// the onDidChangeAccounts event will trigger in many cases where the accounts didn't actually change\n\t\t\t// the notifyNodeChanged event triggers a refresh which triggers a getChildren which can trigger this callback\n\t\t\t// this below check short-circuits the infinite callback loop\n\t\t\tif (!equals(e.accounts, previousAccounts)) {\n\t\t\t\tazureResourceTree.notifyNodeChanged(undefined);\n\t\t\t}\n\t\t\tpreviousAccounts = e.accounts;\n\t\t});\n\n\t\tregisterAzureResourceCommands(this.appContext, azureResourceTree);\n\n\t\tregisterAzureResourceDatabaseServerCommands(this.appContext);\n\n\t\tregisterAzureResourceDatabaseCommands(this.appContext);\n\n\t\treturn Promise.resolve(true);\n\t}\n\n\tpublic deactivate(): void {\n\t}\n}\n"]}