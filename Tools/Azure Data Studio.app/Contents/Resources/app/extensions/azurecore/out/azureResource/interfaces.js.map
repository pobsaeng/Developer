{"version":3,"file":"azureResource/interfaces.js","sourceRoot":"../src","sources":["azureResource/interfaces.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,YAAY,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the Source EULA. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport { ServiceClientCredentials } from 'ms-rest';\nimport { Account, DidChangeAccountsParams } from 'sqlops';\nimport { Event } from 'vscode';\n\nimport { azureResource } from './azure-resource';\n\nexport interface IAzureResourceAccountService {\n\tgetAccounts(): Promise<Account[]>;\n\n\treadonly onDidChangeAccounts: Event<DidChangeAccountsParams>;\n}\n\nexport interface IAzureResourceSubscriptionService {\n\tgetSubscriptions(account: Account, credential: ServiceClientCredentials): Promise<azureResource.AzureResourceSubscription[]>;\n}\n\nexport interface IAzureResourceSubscriptionFilterService {\n\tgetSelectedSubscriptions(account: Account): Promise<azureResource.AzureResourceSubscription[]>;\n\n\tsaveSelectedSubscriptions(account: Account, selectedSubscriptions: azureResource.AzureResourceSubscription[]): Promise<void>;\n}\n\nexport interface IAzureResourceCacheService {\n\tgenerateKey(id: string): string;\n\n\tget<T>(key: string): T | undefined;\n\n\tupdate<T>(key: string, value: T): void;\n}\n\nexport interface IAzureResourceTenantService {\n\tgetTenantId(subscription: azureResource.AzureResourceSubscription): Promise<string>;\n}\n\nexport interface IAzureResourceNodeWithProviderId {\n\tresourceProviderId: string;\n\tresourceNode: azureResource.IAzureResourceNode;\n}"]}