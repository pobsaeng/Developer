{"version":3,"file":"controllers/controllerBase.js","sourceRoot":"../src","sources":["controllers/controllerBase.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,YAAY,CAAC;;AAOb;IAEC,YAA6B,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IACnD,CAAC;IAED,IAAc,UAAU;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;IACnC,CAAC;IAED,IAAW,gBAAgB;QAC1B,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC;IAC5D,CAAC;IAMM,OAAO;QACb,IAAI,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;CACD;AApBD,iCAoBC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the Source EULA. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as vscode from 'vscode';\n\nimport { AppContext } from '../appContext';\nimport { ApiWrapper } from '../apiWrapper';\n\nexport default abstract class ControllerBase implements vscode.Disposable {\n\n\tpublic constructor(protected appContext: AppContext) {\n\t}\n\n\tprotected get apiWrapper(): ApiWrapper {\n\t\treturn this.appContext.apiWrapper;\n\t}\n\n\tpublic get extensionContext(): vscode.ExtensionContext {\n\t\treturn this.appContext && this.appContext.extensionContext;\n\t}\n\n\tabstract activate(): Promise<boolean>;\n\n\tabstract deactivate(): void;\n\n\tpublic dispose(): void {\n\t\tthis.deactivate();\n\t}\n}\n\n"]}