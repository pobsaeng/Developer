{"version":3,"file":"azureResource/providers/database/databaseService.js","sourceRoot":"../src","sources":["azureResource/providers/database/databaseService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,YAAY,CAAC;;;;;;;;;;AAGb,iDAAoD;AAMpD;IACc,YAAY,CAAC,YAAqD,EAAE,UAAoC;;YACpH,MAAM,SAAS,GAA4B,EAAE,CAAC;YAC9C,MAAM,mBAAmB,GAAG,IAAI,mCAAmB,CAAC,UAAU,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC;YACjF,MAAM,IAAI,GAAG,MAAM,mBAAmB,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACtD,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;gBACvB,0CAA0C;gBAC1C,MAAM,WAAW,GAAG,IAAI,MAAM,CAAC,oBAAoB,YAAY,CAAC,EAAE,+DAA+D,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC7I,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;oBAC9B,SAAS;iBACT;gBAED,MAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBACxC,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBAE/B,MAAM,GAAG,GAAG,MAAM,mBAAmB,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;gBACrF,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC;oBAClC,IAAI,EAAE,EAAE,CAAC,IAAI;oBACb,UAAU,EAAE,GAAG,CAAC,IAAI;oBACpB,cAAc,EAAE,GAAG,CAAC,wBAAwB;oBAC5C,SAAS,EAAE,GAAG,CAAC,kBAAkB;iBACjC,CAAC,CAAC,CAAC;aACJ;YAED,OAAO,SAAS,CAAC;QAClB,CAAC;KAAA;CACD;AA1BD,oEA0BC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the Source EULA. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport { ServiceClientCredentials } from 'ms-rest';\nimport { SqlManagementClient } from 'azure-arm-sql';\n\nimport { azureResource } from '../../azure-resource';\nimport { IAzureResourceDatabaseService } from './interfaces';\nimport { AzureResourceDatabase } from './models';\n\nexport class AzureResourceDatabaseService implements IAzureResourceDatabaseService {\n\tpublic async getDatabases(subscription: azureResource.AzureResourceSubscription, credential: ServiceClientCredentials): Promise<AzureResourceDatabase[]> {\n\t\tconst databases: AzureResourceDatabase[] = [];\n\t\tconst sqlManagementClient = new SqlManagementClient(credential, subscription.id);\n\t\tconst svrs = await sqlManagementClient.servers.list();\n\t\tfor (const svr of svrs) {\n\t\t\t// Extract resource group name from svr.id\n\t\t\tconst svrIdRegExp = new RegExp(`\\/subscriptions\\/${subscription.id}\\/resourceGroups\\/(.+)\\/providers\\/Microsoft\\.Sql\\/servers\\/${svr.name}`);\n\t\t\tif (!svrIdRegExp.test(svr.id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst founds = svrIdRegExp.exec(svr.id);\n\t\t\tconst resouceGroup = founds[1];\n\n\t\t\tconst dbs = await sqlManagementClient.databases.listByServer(resouceGroup, svr.name);\n\t\t\tdbs.forEach((db) => databases.push({\n\t\t\t\tname: db.name,\n\t\t\t\tserverName: svr.name,\n\t\t\t\tserverFullName: svr.fullyQualifiedDomainName,\n\t\t\t\tloginName: svr.administratorLogin\n\t\t\t}));\n\t\t}\n\n\t\treturn databases;\n\t}\n}\n"]}