{"version":3,"file":"test/azureResource/messageTreeNode.test.js","sourceRoot":"../src","sources":["test/azureResource/messageTreeNode.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,YAAY,CAAC;;;;;;;;;;AAEb,iCAAiC;AACjC,iCAAiC;AACjC,iBAAe;AAEf,6DAAsE;AACtE,yEAAmF;AAEnF,QAAQ,CAAC,mCAAmC,EAAE;IAC7C,EAAE,CAAC,iCAAiC,EAAE;;YACrC,MAAM,WAAW,GAAG,eAAe,CAAC;YACpC,MAAM,QAAQ,GAAG,IAAI,8CAA4B,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;YAE1E,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YAErD,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,WAAW,EAAE,CAAC;YAC9C,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAC1C,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,iCAAqB,CAAC,OAAO,CAAC,CAAC;YACnE,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;YAE9E,MAAM,QAAQ,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;YACxC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;YAC/B,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAC1C,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,iCAAqB,CAAC,OAAO,CAAC,CAAC;YAC/D,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,iCAAqB,CAAC,OAAO,CAAC,CAAC;QAChE,CAAC;KAAA,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,qCAAqC,EAAE;IAC/C,EAAE,CAAC,+BAA+B,EAAE;;YACnC,MAAM,WAAW,GAAG,eAAe,CAAC;YACpC,MAAM,QAAQ,GAAG,8CAA4B,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;YAC7E,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,8CAA4B,CAAC,CAAC;QAC3D,CAAC;KAAA,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the Source EULA. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as should from 'should';\nimport * as vscode from 'vscode';\nimport 'mocha';\n\nimport { AzureResourceItemType } from '../../azureResource/constants';\nimport { AzureResourceMessageTreeNode } from '../../azureResource/messageTreeNode';\n\ndescribe('AzureResourceMessageTreeNode.info', function(): void {\n\tit('Should be correct when created.', async function(): Promise<void> {\n\t\tconst mockMessage = 'Test messagse';\n\t\tconst treeNode = new AzureResourceMessageTreeNode(mockMessage, undefined);\n\n\t\tshould(treeNode.nodePathValue).startWith('message_');\n\n\t\tconst treeItem = await treeNode.getTreeItem();\n\t\tshould(treeItem.label).equal(mockMessage);\n\t\tshould(treeItem.contextValue).equal(AzureResourceItemType.message);\n\t\tshould(treeItem.collapsibleState).equal(vscode.TreeItemCollapsibleState.None);\n\n\t\tconst nodeInfo = treeNode.getNodeInfo();\n\t\tshould(nodeInfo.isLeaf).true();\n\t\tshould(nodeInfo.label).equal(mockMessage);\n\t\tshould(nodeInfo.nodeType).equal(AzureResourceItemType.message);\n\t\tshould(nodeInfo.iconType).equal(AzureResourceItemType.message);\n\t});\n});\n\ndescribe('AzureResourceMessageTreeNode.create', function(): void {\n\tit('Should create a message node.', async function(): Promise<void> {\n\t\tconst mockMessage = 'Test messagse';\n\t\tconst treeNode = AzureResourceMessageTreeNode.create(mockMessage, undefined);\n\t\tshould(treeNode).instanceof(AzureResourceMessageTreeNode);\n\t});\n});\n"]}