{"version":3,"file":"apiWrapper.js","sourceRoot":"../src","sources":["apiWrapper.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the Source EULA. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as vscode from 'vscode';\nimport * as sqlops from 'sqlops';\n\nimport * as constants from './constants';\n\n/**\n * Wrapper class to act as a facade over VSCode and Data APIs and allow us to test / mock callbacks into\n * this API from our code\n *\n * @export\n * @class ApiWrapper\n */\nexport class ApiWrapper {\n\t// Data APIs\n\tpublic registerConnectionProvider(provider: sqlops.ConnectionProvider): vscode.Disposable {\n\t\treturn sqlops.dataprotocol.registerConnectionProvider(provider);\n\t}\n\n\tpublic registerObjectExplorerProvider(provider: sqlops.ObjectExplorerProvider): vscode.Disposable {\n\t\treturn sqlops.dataprotocol.registerObjectExplorerProvider(provider);\n\t}\n\n\tpublic registerTaskServicesProvider(provider: sqlops.TaskServicesProvider): vscode.Disposable {\n\t\treturn sqlops.dataprotocol.registerTaskServicesProvider(provider);\n\t}\n\n\tpublic registerFileBrowserProvider(provider: sqlops.FileBrowserProvider): vscode.Disposable {\n\t\treturn sqlops.dataprotocol.registerFileBrowserProvider(provider);\n\t}\n\n\tpublic registerCapabilitiesServiceProvider(provider: sqlops.CapabilitiesProvider): vscode.Disposable {\n\t\treturn sqlops.dataprotocol.registerCapabilitiesServiceProvider(provider);\n\t}\n\n\tpublic registerModelViewProvider(widgetId: string, handler: (modelView: sqlops.ModelView) => void): void {\n\t\treturn sqlops.ui.registerModelViewProvider(widgetId, handler);\n\t}\n\n\tpublic registerWebviewProvider(widgetId: string, handler: (webview: sqlops.DashboardWebview) => void): void {\n\t\treturn sqlops.dashboard.registerWebviewProvider(widgetId, handler);\n\t}\n\n\tpublic createDialog(title: string): sqlops.window.modelviewdialog.Dialog {\n\t\treturn sqlops.window.modelviewdialog.createDialog(title);\n\t}\n\n\tpublic openDialog(dialog: sqlops.window.modelviewdialog.Dialog): void {\n\t\treturn sqlops.window.modelviewdialog.openDialog(dialog);\n\t}\n\n\tpublic closeDialog(dialog: sqlops.window.modelviewdialog.Dialog): void {\n\t\treturn sqlops.window.modelviewdialog.closeDialog(dialog);\n\t}\n\n\tpublic registerTaskHandler(taskId: string, handler: (profile: sqlops.IConnectionProfile) => void): void {\n\t\tsqlops.tasks.registerTask(taskId, handler);\n\t}\n\n\tpublic startBackgroundOperation(operationInfo: sqlops.BackgroundOperationInfo): void {\n\t\tsqlops.tasks.startBackgroundOperation(operationInfo);\n\t}\n\n\tpublic getActiveConnections(): Thenable<sqlops.connection.Connection[]> {\n\t\treturn sqlops.connection.getActiveConnections();\n\t}\n\n\tpublic getCurrentConnection(): Thenable<sqlops.connection.Connection> {\n\t\treturn sqlops.connection.getCurrentConnection();\n\t}\n\n\tpublic createModelViewEditor(title: string, options?: sqlops.ModelViewEditorOptions): sqlops.workspace.ModelViewEditor {\n\t\treturn sqlops.workspace.createModelViewEditor(title, options);\n\t}\n\n\t// VSCode APIs\n\tpublic createTerminal(name?: string, shellPath?: string, shellArgs?: string[]): vscode.Terminal {\n\t\treturn vscode.window.createTerminal(name, shellPath, shellArgs);\n\t}\n\n\tpublic createTerminalWithOptions(options: vscode.TerminalOptions): vscode.Terminal {\n\t\treturn vscode.window.createTerminal(options);\n\t}\n\n\tpublic executeCommand(command: string, ...rest: any[]): Thenable<any> {\n\t\treturn vscode.commands.executeCommand(command, ...rest);\n\t}\n\n\tpublic getFilePathRelativeToWorkspace(uri: vscode.Uri): string {\n\t\treturn vscode.workspace.asRelativePath(uri);\n\t}\n\n\tpublic getWorkspaceFolders(): vscode.WorkspaceFolder[] {\n\t\treturn vscode.workspace.workspaceFolders;\n\t}\n\n\tpublic getWorkspacePathFromUri(uri: vscode.Uri): string | undefined {\n\t\tlet workspaceFolder = vscode.workspace.getWorkspaceFolder(uri);\n\t\treturn workspaceFolder ? workspaceFolder.uri.fsPath : undefined;\n\t}\n\n\tpublic registerCommand(command: string, callback: (...args: any[]) => any, thisArg?: any): vscode.Disposable {\n\t\treturn vscode.commands.registerCommand(command, callback, thisArg);\n\t}\n\n\tpublic registerDocumentOpenHandler(handler: (doc: vscode.TextDocument) => any): vscode.Disposable {\n\t\treturn vscode.workspace.onDidOpenTextDocument(handler);\n\t}\n\n\tpublic registerTreeDataProvider<T>(viewId: string, treeDataProvider: vscode.TreeDataProvider<T>): vscode.Disposable {\n\t\treturn vscode.window.registerTreeDataProvider(viewId, treeDataProvider);\n\t}\n\n\tpublic setCommandContext(key: string, value: any): Thenable<any> {\n\t\treturn vscode.commands.executeCommand(constants.BuiltInCommands.SetContext, key, value);\n\t}\n\n\t/**\n\t * Get the configuration for a extensionName\n\t * @param extensionName The string name of the extension to get the configuration for\n\t * @param resource The optional URI, as a URI object or a string, to use to get resource-scoped configurations\n\t */\n\tpublic getConfiguration(extensionName?: string, resource?: vscode.Uri | string): vscode.WorkspaceConfiguration {\n\t\tif (typeof resource === 'string') {\n\t\t\ttry {\n\t\t\t\tresource = this.parseUri(resource);\n\t\t\t} catch (e) {\n\t\t\t\tresource = undefined;\n\t\t\t}\n\t\t}\n\t\treturn vscode.workspace.getConfiguration(extensionName, resource as vscode.Uri);\n\t}\n\n\tpublic getExtensionConfiguration(): vscode.WorkspaceConfiguration {\n\t\treturn this.getConfiguration(constants.extensionConfigSectionName);\n\t}\n\n\t/**\n\t * Parse uri\n\t */\n\tpublic parseUri(uri: string): vscode.Uri {\n\t\treturn vscode.Uri.parse(uri);\n\t}\n\n\tpublic showOpenDialog(options: vscode.OpenDialogOptions): Thenable<vscode.Uri[] | undefined> {\n\t\treturn vscode.window.showOpenDialog(options);\n\t}\n\n\tpublic showSaveDialog(options: vscode.SaveDialogOptions): Thenable<vscode.Uri> {\n\t\treturn vscode.window.showSaveDialog(options);\n\t}\n\n\tpublic openTextDocument(uri: vscode.Uri): Thenable<vscode.TextDocument>;\n\tpublic openTextDocument(options: { language?: string; content?: string; }): Thenable<vscode.TextDocument>;\n\tpublic openTextDocument(uriOrOptions): Thenable<vscode.TextDocument> {\n\t\treturn vscode.workspace.openTextDocument(uriOrOptions);\n\t}\n\n\tpublic showTextDocument(document: vscode.TextDocument, column?: vscode.ViewColumn, preserveFocus?: boolean, preview?: boolean): Thenable<vscode.TextEditor> {\n\t\tlet options: vscode.TextDocumentShowOptions = {\n\t\t\tviewColumn: column,\n\t\t\tpreserveFocus: preserveFocus,\n\t\t\tpreview: preview\n\t\t};\n\t\treturn vscode.window.showTextDocument(document, options);\n\t}\n\n\tpublic showErrorMessage(message: string, ...items: string[]): Thenable<string | undefined> {\n\t\treturn vscode.window.showErrorMessage(message, ...items);\n\t}\n\n\tpublic showWarningMessage(message: string, ...items: string[]): Thenable<string | undefined> {\n\t\treturn vscode.window.showWarningMessage(message, ...items);\n\t}\n\n\tpublic showInformationMessage(message: string, ...items: string[]): Thenable<string | undefined> {\n\t\treturn vscode.window.showInformationMessage(message, ...items);\n\t}\n\n\tpublic createStatusBarItem(alignment?: vscode.StatusBarAlignment, priority?: number): vscode.StatusBarItem {\n\t\treturn vscode.window.createStatusBarItem(alignment, priority);\n\t}\n\n\tpublic get workspaceFolders(): vscode.WorkspaceFolder[] {\n\t\treturn vscode.workspace.workspaceFolders;\n\t}\n\n\tpublic createOutputChannel(name: string): vscode.OutputChannel {\n\t\treturn vscode.window.createOutputChannel(name);\n\t}\n\n\tpublic createWizardPage(title: string): sqlops.window.modelviewdialog.WizardPage {\n\t\treturn sqlops.window.modelviewdialog.createWizardPage(title);\n\t}\n\n\tpublic registerCompletionItemProvider(selector: vscode.DocumentSelector, provider: vscode.CompletionItemProvider, ...triggerCharacters: string[]): vscode.Disposable {\n\t\treturn vscode.languages.registerCompletionItemProvider(selector, provider, ...triggerCharacters);\n\t}\n\n\tpublic createTab(title: string): sqlops.window.modelviewdialog.DialogTab {\n\t\treturn sqlops.window.modelviewdialog.createTab(title);\n\t}\n\n\t// Account APIs\n\tpublic getAllAccounts(): Thenable<sqlops.Account[]> {\n\t\treturn sqlops.accounts.getAllAccounts();\n\t}\n\n\tpublic getSecurityToken(account: sqlops.Account, resource: sqlops.AzureResource): Thenable<{}> {\n\t\treturn sqlops.accounts.getSecurityToken(account, resource);\n\t}\n\n\tpublic readonly onDidChangeAccounts = sqlops.accounts.onDidChangeAccounts;\n\n\t// Connection APIs\n\tpublic openConnectionDialog(providers: string[], initialConnectionProfile?: sqlops.IConnectionProfile, connectionCompletionOptions?: sqlops.IConnectionCompletionOptions): Thenable<sqlops.connection.Connection> {\n\t\treturn sqlops.connection.openConnectionDialog(providers, initialConnectionProfile, connectionCompletionOptions);\n\t}\n}\n"]}