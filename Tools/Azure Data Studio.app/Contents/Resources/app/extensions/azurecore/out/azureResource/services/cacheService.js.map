{"version":3,"file":"azureResource/services/cacheService.js","sourceRoot":"../src","sources":["azureResource/services/cacheService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,YAAY,CAAC;;AAMb;IACC,YACC,OAAyB;QAiBlB,aAAQ,GAAqB,SAAS,CAAC;QAf9C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IACzB,CAAC;IAEM,WAAW,CAAC,EAAU;QACtB,OAAO,GAAG,yBAAyB,CAAC,cAAc,IAAI,EAAE,EAAE,CAAC;IAC/D,CAAC;IAEM,GAAG,CAAI,GAAW;QAC3B,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9C,CAAC;IAEM,MAAM,CAAI,GAAW,EAAE,KAAQ;QACrC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;;AAIuB,wCAAc,GAAG,sBAAsB,CAAC;AArBjE,8DAsBC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the Source EULA. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport { ExtensionContext } from 'vscode';\n\nimport { IAzureResourceCacheService } from '../interfaces';\n\nexport class AzureResourceCacheService implements IAzureResourceCacheService {\n\tpublic constructor(\n\t\tcontext: ExtensionContext\n\t) {\n\t\tthis._context = context;\n\t}\n\n\tpublic generateKey(id: string): string {\n        return `${AzureResourceCacheService.cacheKeyPrefix}.${id}`;\n    }\n\n    public get<T>(key: string): T | undefined {\n\t\treturn this._context.workspaceState.get(key);\n\t}\n\n\tpublic update<T>(key: string, value: T): void {\n\t\tthis._context.workspaceState.update(key, value);\n\t}\n\n\tprivate _context: ExtensionContext = undefined;\n\n\tprivate static readonly cacheKeyPrefix = 'azure.resource.cache';\n}"]}