{"version":3,"file":"account-provider/interfaces.js","sourceRoot":"../src","sources":["account-provider/interfaces.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC","sourcesContent":["'use strict';\n\nimport * as sqlops from 'sqlops';\n\n/**\n * Represents a tenant (an Azure Active Directory instance) to which a user has access\n */\nexport interface Tenant {\n\t/**\n\t * Globally unique identifier of the tenant\n\t */\n\tid: string;\n\n\t/**\n\t * Display name of the tenant\n\t */\n\tdisplayName: string;\n\n\t/**\n\t * Identifier of the user in the tenant\n\t */\n\tuserId: string;\n}\n\n/**\n * Represents a resource exposed by an Azure Active Directory\n */\nexport interface Resource {\n\t/**\n\t * Identifier of the resource\n\t */\n\tid: string;\n\n\t/**\n\t * Endpoint url used to access the resource\n\t */\n\tendpoint: string;\n}\n\n/**\n * Represents the arguments that identify an instantiation of the AAD account provider\n */\nexport interface Arguments {\n\t/**\n\t * Host of the authority\n\t */\n\thost: string;\n\n\t/**\n\t * Identifier of the client application\n\t */\n\tclientId: string;\n}\n\n/**\n * Represents settings for an AAD account provider\n */\nexport interface Settings {\n\t/**\n\t * Host of the authority\n\t */\n\thost?: string;\n\n\t/**\n\t * Identifier of the client application\n\t */\n\tclientId?: string;\n\n\t/**\n\t * Identifier of the resource to request when signing in\n\t */\n\tsignInResourceId?: string;\n\n\t/**\n\t * Information that describes the AAD graph resource\n\t */\n\tgraphResource?: Resource;\n\n\t/**\n\t * Information that describes the Azure resource management resource\n\t */\n\tarmResource?: Resource;\n\n\t/**\n\t * Information that describes the SQL Azure resource\n\t */\n\tsqlResource?: Resource;\n\n\t/**\n\t * A list of tenant IDs to authenticate against. If defined, then these IDs will be used\n\t * instead of querying the tenants endpoint of the armResource\n\t */\n\tadTenants?: string[];\n\n\t// AuthorizationCodeGrantFlowSettings //////////////////////////////////\n\n\t/**\n\t * An optional site ID that brands the interactive aspect of sign in\n\t */\n\tsiteId?: string;\n\n\t/**\n\t * Redirect URI that is used to signify the end of the interactive aspect of sign it\n\t */\n\tredirectUri?: string;\n}\n\n/**\n * Mapping of configuration key with the metadata to instantiate the account provider\n */\nexport interface ProviderSettings {\n\t/**\n\t * Key for configuration regarding whether the account provider is enabled\n\t */\n\tconfigKey: string;\n\n\t/**\n\t * Metadata for the provider\n\t */\n\tmetadata: AzureAccountProviderMetadata;\n}\n\n/**\n * Extension of account provider metadata to override settings type for Azure account providers\n */\nexport interface AzureAccountProviderMetadata extends sqlops.AccountProviderMetadata {\n\t/**\n\t * Azure specific account provider settings.\n\t */\n\tsettings: Settings;\n}\n\n/**\n * Properties specific to an Azure account\n */\nexport interface AzureAccountProperties {\n\t/**\n\t * Whether or not the account is a Microsoft account\n\t */\n\tisMsAccount: boolean;\n\n\t/**\n\t * A list of tenants (aka directories) that the account belongs to\n\t */\n\ttenants: Tenant[];\n}\n\n/**\n * Override of the Account type to enforce properties that are AzureAccountProperties\n */\nexport interface AzureAccount extends sqlops.Account {\n\t/**\n\t * AzureAccountProperties specifically used for Azure accounts\n\t */\n\tproperties: AzureAccountProperties;\n}\n\n/**\n * Token returned from a request for an access token\n */\nexport interface AzureAccountSecurityToken {\n\t/**\n\t * Access token, itself\n\t */\n\ttoken: string;\n\n\t/**\n\t * Date that the token expires on\n\t */\n\texpiresOn: Date | string;\n\n\t/**\n\t * Name of the resource the token is good for (ie, management.core.windows.net)\n\t */\n\tresource: string;\n\n\t/**\n\t * Type of the token (pretty much always 'Bearer')\n\t */\n\ttokenType: string;\n}\n\n/**\n * Azure account security token maps a tenant ID to the information returned from a request to get\n * an access token. The list of tenants correspond to the tenants in the account properties.\n */\nexport type AzureAccountSecurityTokenCollection = { [tenantId: string]: AzureAccountSecurityToken };\n"]}