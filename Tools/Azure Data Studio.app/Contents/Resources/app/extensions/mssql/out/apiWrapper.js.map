{"version":3,"file":"apiWrapper.js","sourceRoot":"../src","sources":["apiWrapper.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the Source EULA. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as vscode from 'vscode';\nimport * as sqlops from 'sqlops';\n\n/**\n * Wrapper class to act as a facade over VSCode and Data APIs and allow us to test / mock callbacks into\n * this API from our code\n *\n * @export\n * @class ApiWrapper\n */\nexport class ApiWrapper {\n\t// Data APIs\n\tpublic registerConnectionProvider(provider: sqlops.ConnectionProvider): vscode.Disposable {\n\t\treturn sqlops.dataprotocol.registerConnectionProvider(provider);\n\t}\n\n\tpublic registerObjectExplorerNodeProvider(provider: sqlops.ObjectExplorerNodeProvider): vscode.Disposable {\n\t\treturn sqlops.dataprotocol.registerObjectExplorerNodeProvider(provider);\n\t}\n\n\tpublic registerTaskServicesProvider(provider: sqlops.TaskServicesProvider): vscode.Disposable {\n\t\treturn sqlops.dataprotocol.registerTaskServicesProvider(provider);\n\t}\n\n\tpublic registerFileBrowserProvider(provider: sqlops.FileBrowserProvider): vscode.Disposable {\n\t\treturn sqlops.dataprotocol.registerFileBrowserProvider(provider);\n\t}\n\n\tpublic createDialog(title: string): sqlops.window.modelviewdialog.Dialog {\n\t\treturn sqlops.window.modelviewdialog.createDialog(title);\n\t}\n\n\tpublic openDialog(dialog: sqlops.window.modelviewdialog.Dialog): void {\n\t\treturn sqlops.window.modelviewdialog.openDialog(dialog);\n\t}\n\n\tpublic closeDialog(dialog: sqlops.window.modelviewdialog.Dialog): void {\n\t\treturn sqlops.window.modelviewdialog.closeDialog(dialog);\n\t}\n\n\tpublic registerTaskHandler(taskId: string, handler: (profile: sqlops.IConnectionProfile) => void): void {\n\t\tsqlops.tasks.registerTask(taskId, handler);\n\t}\n\n\tpublic startBackgroundOperation(operationInfo: sqlops.BackgroundOperationInfo): void {\n\t\tsqlops.tasks.startBackgroundOperation(operationInfo);\n\t}\n\n\tpublic getActiveConnections(): Thenable<sqlops.connection.Connection[]> {\n\t\treturn sqlops.connection.getActiveConnections();\n\t}\n\n\t// VSCode APIs\n\tpublic executeCommand(command: string, ...rest: any[]): Thenable<any> {\n\t\treturn vscode.commands.executeCommand(command, ...rest);\n\t}\n\n\tpublic registerCommand(command: string, callback: (...args: any[]) => any, thisArg?: any): vscode.Disposable {\n\t\treturn vscode.commands.registerCommand(command, callback, thisArg);\n\t}\n\n\tpublic showErrorMessage(message: string, ...items: string[]): Thenable<string | undefined> {\n\t\treturn vscode.window.showErrorMessage(message, ...items);\n\t}\n\n\tpublic showWarningMessage(message: string, ...items: string[]): Thenable<string | undefined> {\n\t\treturn vscode.window.showWarningMessage(message, ...items);\n\t}\n\n\tpublic showInformationMessage(message: string, ...items: string[]): Thenable<string | undefined> {\n\t\treturn vscode.window.showInformationMessage(message, ...items);\n\t}\n\n\tpublic showOpenDialog(options: vscode.OpenDialogOptions): Thenable<vscode.Uri[] | undefined> {\n\t\treturn vscode.window.showOpenDialog(options);\n\t}\n\n\tpublic showSaveDialog(options: vscode.SaveDialogOptions): Thenable<vscode.Uri> {\n\t\treturn vscode.window.showSaveDialog(options);\n\t}\n\n\tpublic openTextDocument(uri: vscode.Uri): Thenable<vscode.TextDocument>;\n\tpublic openTextDocument(options: { language?: string; content?: string; }): Thenable<vscode.TextDocument>;\n\tpublic openTextDocument(uriOrOptions): Thenable<vscode.TextDocument> {\n\t\treturn vscode.workspace.openTextDocument(uriOrOptions);\n\t}\n\n\tpublic showTextDocument(document: vscode.TextDocument, column?: vscode.ViewColumn, preserveFocus?: boolean, preview?: boolean): Thenable<vscode.TextEditor> {\n\t\tlet options: vscode.TextDocumentShowOptions = {\n\t\t\tviewColumn: column,\n\t\t\tpreserveFocus: preserveFocus,\n\t\t\tpreview: preview\n\t\t};\n\t\treturn vscode.window.showTextDocument(document, options);\n\t}\n\n\tpublic get workspaceFolders(): vscode.WorkspaceFolder[] {\n\t\treturn vscode.workspace.workspaceFolders;\n\t}\n\n\tpublic createStatusBarItem(alignment?: vscode.StatusBarAlignment, priority?: number): vscode.StatusBarItem {\n\t\treturn vscode.window.createStatusBarItem(alignment, priority);\n\t}\n\n\tpublic createOutputChannel(name: string): vscode.OutputChannel {\n\t\treturn vscode.window.createOutputChannel(name);\n\t}\n\n\tpublic createTab(title: string): sqlops.window.modelviewdialog.DialogTab {\n\t\treturn sqlops.window.modelviewdialog.createTab(title);\n\t}\n}\n"]}