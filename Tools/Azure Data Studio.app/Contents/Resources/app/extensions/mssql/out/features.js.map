{"version":3,"file":"features.js","sourceRoot":"../src","sources":["features.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the Source EULA. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport { SqlOpsDataClient, SqlOpsFeature } from 'dataprotocol-client';\nimport { ClientCapabilities, StaticFeature, RPCMessageType, ServerCapabilities } from 'vscode-languageclient';\nimport { Disposable } from 'vscode';\nimport { Telemetry } from './telemetry';\nimport * as contracts from './contracts';\nimport * as sqlops from 'sqlops';\nimport * as Utils from './utils';\nimport * as UUID from 'vscode-languageclient/lib/utils/uuid';\n\nexport class TelemetryFeature implements StaticFeature {\n\n\tconstructor(private _client: SqlOpsDataClient) { }\n\n\tfillClientCapabilities(capabilities: ClientCapabilities): void {\n\t\tUtils.ensure(capabilities, 'telemetry')!.telemetry = true;\n\t}\n\n\tinitialize(): void {\n\t\tthis._client.onNotification(contracts.TelemetryNotification.type, e => {\n\t\t\tTelemetry.sendTelemetryEvent(e.params.eventName, e.params.properties, e.params.measures);\n\t\t});\n\t}\n}\n\nexport class DacFxServicesFeature extends SqlOpsFeature<undefined> {\n\tprivate static readonly messageTypes: RPCMessageType[] = [\n\t\tcontracts.ExportRequest.type,\n\t\tcontracts.ImportRequest.type,\n\t\tcontracts.ExtractRequest.type,\n\t\tcontracts.DeployRequest.type\n\t];\n\n\tconstructor(client: SqlOpsDataClient) {\n\t\tsuper(client, DacFxServicesFeature.messageTypes);\n\t}\n\n\tpublic fillClientCapabilities(capabilities: ClientCapabilities): void {\n\t}\n\n\tpublic initialize(capabilities: ServerCapabilities): void {\n\t\tthis.register(this.messages, {\n\t\t\tid: UUID.generateUuid(),\n\t\t\tregisterOptions: undefined\n\t\t});\n\t}\n\n\tprotected registerProvider(options: undefined): Disposable {\n\t\tconst client = this._client;\n\t\tlet self = this;\n\n\t\tlet exportBacpac = (databaseName: string, packageFilePath: string, ownerUri: string, taskExecutionMode: sqlops.TaskExecutionMode): Thenable<sqlops.DacFxResult> => {\n\t\t\tlet params: contracts.ExportParams = { databaseName: databaseName, packageFilePath: packageFilePath, ownerUri: ownerUri, taskExecutionMode: taskExecutionMode };\n\t\t\treturn client.sendRequest(contracts.ExportRequest.type, params).then(\n\t\t\t\tr => {\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(contracts.ExportRequest.type, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet importBacpac = (packageFilePath: string, databaseName: string, ownerUri: string, taskExecutionMode: sqlops.TaskExecutionMode): Thenable<sqlops.DacFxResult> => {\n\t\t\tlet params: contracts.ImportParams = { packageFilePath: packageFilePath, databaseName: databaseName, ownerUri: ownerUri, taskExecutionMode: taskExecutionMode };\n\t\t\treturn client.sendRequest(contracts.ImportRequest.type, params).then(\n\t\t\t\tr => {\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(contracts.ImportRequest.type, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet extractDacpac = (databaseName: string, packageFilePath: string, applicationName: string, applicationVersion: string, ownerUri: string, taskExecutionMode: sqlops.TaskExecutionMode): Thenable<sqlops.DacFxResult> => {\n\t\t\tlet params: contracts.ExtractParams = { databaseName: databaseName, packageFilePath: packageFilePath, applicationName: applicationName, applicationVersion: applicationVersion, ownerUri: ownerUri, taskExecutionMode: taskExecutionMode };\n\t\t\treturn client.sendRequest(contracts.ExtractRequest.type, params).then(\n\t\t\t\tr => {\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(contracts.ExtractRequest.type, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet deployDacpac = (packageFilePath: string, targetDatabaseName: string, upgradeExisting: boolean, ownerUri: string, taskExecutionMode: sqlops.TaskExecutionMode): Thenable<sqlops.DacFxResult> => {\n\t\t\tlet params: contracts.DeployParams = { packageFilePath: packageFilePath, databaseName: targetDatabaseName, upgradeExisting: upgradeExisting, ownerUri: ownerUri, taskExecutionMode: taskExecutionMode };\n\t\t\treturn client.sendRequest(contracts.DeployRequest.type, params).then(\n\t\t\t\tr => {\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(contracts.DeployRequest.type, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet generateDeployScript = (packageFilePath: string, targetDatabaseName: string, scriptFilePath: string, ownerUri: string, taskExecutionMode: sqlops.TaskExecutionMode): Thenable<sqlops.DacFxResult> => {\n\t\t\tlet params: contracts.GenerateDeployScriptParams = { packageFilePath: packageFilePath, databaseName: targetDatabaseName, scriptFilePath: scriptFilePath, ownerUri: ownerUri, taskExecutionMode: taskExecutionMode };\n\t\t\treturn client.sendRequest(contracts.GenerateDeployScriptRequest.type, params).then(\n\t\t\t\tr => {\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(contracts.GenerateDeployScriptRequest.type, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet generateDeployPlan = (packageFilePath: string, targetDatabaseName: string, ownerUri: string, taskExecutionMode: sqlops.TaskExecutionMode): Thenable<sqlops.GenerateDeployPlanResult> => {\n\t\t\tlet params: contracts.GenerateDeployPlanParams = { packageFilePath: packageFilePath, databaseName: targetDatabaseName, ownerUri: ownerUri, taskExecutionMode: taskExecutionMode };\n\t\t\treturn client.sendRequest(contracts.GenerateDeployPlanRequest.type, params).then(\n\t\t\t\tr => {\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(contracts.GenerateDeployPlanRequest.type, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\treturn sqlops.dataprotocol.registerDacFxServicesProvider({\n\t\t\tproviderId: client.providerId,\n\t\t\texportBacpac,\n\t\t\timportBacpac,\n\t\t\textractDacpac,\n\t\t\tdeployDacpac,\n\t\t\tgenerateDeployScript,\n\t\t\tgenerateDeployPlan\n\t\t});\n\t}\n}\n\nexport class AgentServicesFeature extends SqlOpsFeature<undefined> {\n\tprivate static readonly messagesTypes: RPCMessageType[] = [\n\t\tcontracts.AgentJobsRequest.type,\n\t\tcontracts.AgentJobHistoryRequest.type,\n\t\tcontracts.AgentJobActionRequest.type\n\t];\n\n\tprivate onUpdatedHandler: () => any;\n\n\tconstructor(client: SqlOpsDataClient) {\n\t\tsuper(client, AgentServicesFeature.messagesTypes);\n\t}\n\n\tpublic fillClientCapabilities(capabilities: ClientCapabilities): void {\n\t\t// this isn't explicitly necessary\n\t\t// ensure(ensure(capabilities, 'connection')!, 'agentServices')!.dynamicRegistration = true;\n\t}\n\n\tpublic initialize(capabilities: ServerCapabilities): void {\n\t\tthis.register(this.messages, {\n\t\t\tid: UUID.generateUuid(),\n\t\t\tregisterOptions: undefined\n\t\t});\n\t}\n\n\tprotected registerProvider(options: undefined): Disposable {\n\t\tconst client = this._client;\n\t\tlet self = this;\n\n\t\t// On updated registration\n\t\tlet registerOnUpdated = (handler: () => any): void => {\n\t\t\tself.onUpdatedHandler = handler;\n\t\t};\n\n\t\tlet fireOnUpdated = (): void => {\n\t\t\tif (self.onUpdatedHandler) {\n\t\t\t\tself.onUpdatedHandler();\n\t\t\t}\n\t\t};\n\n\t\t// Job management methods\n\t\tlet getJobs = (ownerUri: string): Thenable<sqlops.AgentJobsResult> => {\n\t\t\tlet params: contracts.AgentJobsParams = { ownerUri: ownerUri, jobId: null };\n\t\t\treturn client.sendRequest(contracts.AgentJobsRequest.type, params).then(\n\t\t\t\tr => r,\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(contracts.AgentJobsRequest.type, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet getJobHistory = (ownerUri: string, jobID: string, jobName: string): Thenable<sqlops.AgentJobHistoryResult> => {\n\t\t\tlet params: contracts.AgentJobHistoryParams = { ownerUri: ownerUri, jobId: jobID, jobName: jobName };\n\n\t\t\treturn client.sendRequest(contracts.AgentJobHistoryRequest.type, params).then(\n\t\t\t\tr => r,\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(contracts.AgentJobHistoryRequest.type, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet jobAction = (ownerUri: string, jobName: string, action: string): Thenable<sqlops.ResultStatus> => {\n\t\t\tlet params: contracts.AgentJobActionParams = { ownerUri: ownerUri, jobName: jobName, action: action };\n\t\t\treturn client.sendRequest(contracts.AgentJobActionRequest.type, params).then(\n\t\t\t\tr => r,\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(contracts.AgentJobActionRequest.type, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet createJob = (ownerUri: string, jobInfo: sqlops.AgentJobInfo): Thenable<sqlops.CreateAgentJobResult> => {\n\t\t\tlet params: contracts.CreateAgentJobParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\tjob: jobInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.CreateAgentJobRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet updateJob = (ownerUri: string, originalJobName: string, jobInfo: sqlops.AgentJobInfo): Thenable<sqlops.UpdateAgentJobResult> => {\n\t\t\tlet params: contracts.UpdateAgentJobParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\toriginalJobName: originalJobName,\n\t\t\t\tjob: jobInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.UpdateAgentJobRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet deleteJob = (ownerUri: string, jobInfo: sqlops.AgentJobInfo): Thenable<sqlops.ResultStatus> => {\n\t\t\tlet params: contracts.DeleteAgentJobParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\tjob: jobInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.DeleteAgentJobRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet getJobDefaults = (ownerUri: string): Thenable<sqlops.AgentJobDefaultsResult> => {\n\t\t\tlet params: contracts.AgentJobDefaultsParams = {\n\t\t\t\townerUri: ownerUri\n\t\t\t};\n\t\t\tlet requestType = contracts.AgentJobDefaultsRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => r,\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t// Job Step management methods\n\t\tlet createJobStep = (ownerUri: string, stepInfo: sqlops.AgentJobStepInfo): Thenable<sqlops.CreateAgentJobStepResult> => {\n\t\t\tlet params: contracts.CreateAgentJobStepParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\tstep: stepInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.CreateAgentJobStepRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet updateJobStep = (ownerUri: string, originalJobStepName: string, stepInfo: sqlops.AgentJobStepInfo): Thenable<sqlops.UpdateAgentJobStepResult> => {\n\t\t\tlet params: contracts.UpdateAgentJobStepParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\toriginalJobStepName: originalJobStepName,\n\t\t\t\tstep: stepInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.UpdateAgentJobStepRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet deleteJobStep = (ownerUri: string, stepInfo: sqlops.AgentJobStepInfo): Thenable<sqlops.ResultStatus> => {\n\t\t\tlet params: contracts.DeleteAgentJobStepParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\tstep: stepInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.DeleteAgentJobStepRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t// Alert management methods\n\t\tlet getAlerts = (ownerUri: string): Thenable<sqlops.AgentAlertsResult> => {\n\t\t\tlet params: contracts.AgentAlertsParams = {\n\t\t\t\townerUri: ownerUri\n\t\t\t};\n\t\t\tlet requestType = contracts.AgentAlertsRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => r,\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet createAlert = (ownerUri: string, alertInfo: sqlops.AgentAlertInfo): Thenable<sqlops.CreateAgentAlertResult> => {\n\t\t\tlet params: contracts.CreateAgentAlertParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\talert: alertInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.CreateAgentAlertRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet updateAlert = (ownerUri: string, originalAlertName: string, alertInfo: sqlops.AgentAlertInfo): Thenable<sqlops.UpdateAgentAlertResult> => {\n\t\t\tlet params: contracts.UpdateAgentAlertParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\toriginalAlertName: originalAlertName,\n\t\t\t\talert: alertInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.UpdateAgentAlertRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet deleteAlert = (ownerUri: string, alertInfo: sqlops.AgentAlertInfo): Thenable<sqlops.ResultStatus> => {\n\t\t\tlet params: contracts.DeleteAgentAlertParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\talert: alertInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.DeleteAgentAlertRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t// Operator management methods\n\t\tlet getOperators = (ownerUri: string): Thenable<sqlops.AgentOperatorsResult> => {\n\t\t\tlet params: contracts.AgentOperatorsParams = {\n\t\t\t\townerUri: ownerUri\n\t\t\t};\n\t\t\tlet requestType = contracts.AgentOperatorsRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => r,\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet createOperator = (ownerUri: string, operatorInfo: sqlops.AgentOperatorInfo): Thenable<sqlops.CreateAgentOperatorResult> => {\n\t\t\tlet params: contracts.CreateAgentOperatorParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\toperator: operatorInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.CreateAgentOperatorRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet updateOperator = (ownerUri: string, originalOperatorName: string, operatorInfo: sqlops.AgentOperatorInfo): Thenable<sqlops.UpdateAgentOperatorResult> => {\n\t\t\tlet params: contracts.UpdateAgentOperatorParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\toriginalOperatorName: originalOperatorName,\n\t\t\t\toperator: operatorInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.UpdateAgentOperatorRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet deleteOperator = (ownerUri: string, operatorInfo: sqlops.AgentOperatorInfo): Thenable<sqlops.ResultStatus> => {\n\t\t\tlet params: contracts.DeleteAgentOperatorParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\toperator: operatorInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.DeleteAgentOperatorRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t// Proxy management methods\n\t\tlet getProxies = (ownerUri: string): Thenable<sqlops.AgentProxiesResult> => {\n\t\t\tlet params: contracts.AgentProxiesParams = {\n\t\t\t\townerUri: ownerUri\n\t\t\t};\n\t\t\tlet requestType = contracts.AgentProxiesRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => r,\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet createProxy = (ownerUri: string, proxyInfo: sqlops.AgentProxyInfo): Thenable<sqlops.CreateAgentOperatorResult> => {\n\t\t\tlet params: contracts.CreateAgentProxyParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\tproxy: proxyInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.CreateAgentProxyRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet updateProxy = (ownerUri: string, originalProxyName: string, proxyInfo: sqlops.AgentProxyInfo): Thenable<sqlops.UpdateAgentOperatorResult> => {\n\t\t\tlet params: contracts.UpdateAgentProxyParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\toriginalProxyName: originalProxyName,\n\t\t\t\tproxy: proxyInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.UpdateAgentProxyRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet deleteProxy = (ownerUri: string, proxyInfo: sqlops.AgentProxyInfo): Thenable<sqlops.ResultStatus> => {\n\t\t\tlet params: contracts.DeleteAgentProxyParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\tproxy: proxyInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.DeleteAgentProxyRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t// Agent Credential Method\n\t\tlet getCredentials = (ownerUri: string): Thenable<sqlops.GetCredentialsResult> => {\n\t\t\tlet params: contracts.GetCredentialsParams = {\n\t\t\t\townerUri: ownerUri\n\t\t\t};\n\t\t\tlet requestType = contracts.AgentCredentialsRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => r,\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\n\t\t// Job Schedule management methods\n\t\tlet getJobSchedules = (ownerUri: string): Thenable<sqlops.AgentJobSchedulesResult> => {\n\t\t\tlet params: contracts.AgentJobScheduleParams = {\n\t\t\t\townerUri: ownerUri\n\t\t\t};\n\t\t\tlet requestType = contracts.AgentJobSchedulesRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => r,\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet createJobSchedule = (ownerUri: string, scheduleInfo: sqlops.AgentJobScheduleInfo): Thenable<sqlops.CreateAgentJobScheduleResult> => {\n\t\t\tlet params: contracts.CreateAgentJobScheduleParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\tschedule: scheduleInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.CreateAgentJobScheduleRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet updateJobSchedule = (ownerUri: string, originalScheduleName: string, scheduleInfo: sqlops.AgentJobScheduleInfo): Thenable<sqlops.UpdateAgentJobScheduleResult> => {\n\t\t\tlet params: contracts.UpdateAgentJobScheduleParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\toriginalScheduleName: originalScheduleName,\n\t\t\t\tschedule: scheduleInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.UpdateAgentJobScheduleRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tlet deleteJobSchedule = (ownerUri: string, scheduleInfo: sqlops.AgentJobScheduleInfo): Thenable<sqlops.ResultStatus> => {\n\t\t\tlet params: contracts.DeleteAgentJobScheduleParams = {\n\t\t\t\townerUri: ownerUri,\n\t\t\t\tschedule: scheduleInfo\n\t\t\t};\n\t\t\tlet requestType = contracts.DeleteAgentJobScheduleRequest.type;\n\t\t\treturn client.sendRequest(requestType, params).then(\n\t\t\t\tr => {\n\t\t\t\t\tfireOnUpdated();\n\t\t\t\t\treturn r;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tclient.logFailedRequest(requestType, e);\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\treturn sqlops.dataprotocol.registerAgentServicesProvider({\n\t\t\tproviderId: client.providerId,\n\t\t\tgetJobs,\n\t\t\tgetJobHistory,\n\t\t\tjobAction,\n\t\t\tcreateJob,\n\t\t\tupdateJob,\n\t\t\tdeleteJob,\n\t\t\tgetJobDefaults,\n\t\t\tcreateJobStep,\n\t\t\tupdateJobStep,\n\t\t\tdeleteJobStep,\n\t\t\tgetAlerts,\n\t\t\tcreateAlert,\n\t\t\tupdateAlert,\n\t\t\tdeleteAlert,\n\t\t\tgetOperators,\n\t\t\tcreateOperator,\n\t\t\tupdateOperator,\n\t\t\tdeleteOperator,\n\t\t\tgetProxies,\n\t\t\tcreateProxy,\n\t\t\tupdateProxy,\n\t\t\tdeleteProxy,\n\t\t\tgetCredentials,\n\t\t\tgetJobSchedules,\n\t\t\tcreateJobSchedule,\n\t\t\tupdateJobSchedule,\n\t\t\tdeleteJobSchedule,\n\t\t\tregisterOnUpdated\n\t\t});\n\t}\n}\n"]}