{"version":3,"file":"utils.js","sourceRoot":"../src","sources":["utils.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the Source EULA. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as sqlops from 'sqlops';\nimport * as vscode from 'vscode';\nimport * as path from 'path';\nimport * as crypto from 'crypto';\nimport * as os from 'os';\nimport * as findRemoveSync from 'find-remove';\nimport * as constants from './constants';\n\nconst configTracingLevel = 'tracingLevel';\nconst configLogRetentionMinutes = 'logRetentionMinutes';\nconst configLogFilesRemovalLimit = 'logFilesRemovalLimit';\nconst extensionConfigSectionName = 'mssql';\nconst configLogDebugInfo = 'logDebugInfo';\n\n// The function is a duplicate of \\src\\paths.js. IT would be better to import path.js but it doesn't\n// work for now because the extension is running in different process.\nexport function getAppDataPath() {\n\tlet platform = process.platform;\n\tswitch (platform) {\n\t\tcase 'win32': return process.env['APPDATA'] || path.join(process.env['USERPROFILE'], 'AppData', 'Roaming');\n\t\tcase 'darwin': return path.join(os.homedir(), 'Library', 'Application Support');\n\t\tcase 'linux': return process.env['XDG_CONFIG_HOME'] || path.join(os.homedir(), '.config');\n\t\tdefault: throw new Error('Platform not supported');\n\t}\n}\n\nexport function removeOldLogFiles(prefix: string): JSON {\n\treturn findRemoveSync(getDefaultLogDir(), { prefix: `${prefix}_`, age: { seconds: getConfigLogRetentionSeconds() }, limit: getConfigLogFilesRemovalLimit() });\n}\n\nexport function getConfiguration(config: string = extensionConfigSectionName): vscode.WorkspaceConfiguration {\n\treturn vscode.workspace.getConfiguration(extensionConfigSectionName);\n}\n\nexport function getConfigLogFilesRemovalLimit(): number {\n\tlet config = getConfiguration();\n\tif (config) {\n\t\treturn Number((config[configLogFilesRemovalLimit]).toFixed(0));\n\t}\n\telse {\n\t\treturn undefined;\n\t}\n}\n\nexport function getConfigLogRetentionSeconds(): number {\n\tlet config = getConfiguration();\n\tif (config) {\n\t\treturn Number((config[configLogRetentionMinutes] * 60).toFixed(0));\n\t}\n\telse {\n\t\treturn undefined;\n\t}\n}\n\nexport function getConfigTracingLevel(): string {\n\tlet config = getConfiguration();\n\tif (config) {\n\t\treturn config[configTracingLevel];\n\t}\n\telse {\n\t\treturn undefined;\n\t}\n}\n\nexport function getDefaultLogDir(): string {\n\treturn path.join(process.env['VSCODE_LOGS'], '..', '..', 'mssql');\n}\n\nexport function getDefaultLogFile(prefix: string, pid: number): string {\n\treturn path.join(getDefaultLogDir(), `${prefix}_${pid}.log`);\n}\n\nexport function getCommonLaunchArgsAndCleanupOldLogFiles(prefix: string, executablePath: string): string[] {\n\tlet launchArgs = [];\n\tlaunchArgs.push('--log-file');\n\tlet logFile = getDefaultLogFile(prefix, process.pid);\n\tlaunchArgs.push(logFile);\n\n\tconsole.log(`logFile for ${path.basename(executablePath)} is ${logFile}`);\n\tconsole.log(`This process (ui Extenstion Host) is pid: ${process.pid}`);\n\t// Delete old log files\n\tlet deletedLogFiles = removeOldLogFiles(prefix);\n\tconsole.log(`Old log files deletion report: ${JSON.stringify(deletedLogFiles)}`);\n\tlaunchArgs.push('--tracing-level');\n\tlaunchArgs.push(getConfigTracingLevel());\n\treturn launchArgs;\n}\n\nexport function ensure(target: object, key: string): any {\n\tif (target[key] === void 0) {\n\t\ttarget[key] = {} as any;\n\t}\n\treturn target[key];\n}\n\nexport interface IPackageInfo {\n\tname: string;\n\tversion: string;\n\taiKey: string;\n}\n\nexport function getPackageInfo(packageJson: any): IPackageInfo {\n\tif (packageJson) {\n\t\treturn {\n\t\t\tname: packageJson.name,\n\t\t\tversion: packageJson.version,\n\t\t\taiKey: packageJson.aiKey\n\t\t};\n\t}\n}\n\nexport function generateUserId(): Promise<string> {\n\treturn new Promise<string>(resolve => {\n\t\ttry {\n\t\t\tlet interfaces = os.networkInterfaces();\n\t\t\tlet mac;\n\t\t\tfor (let key of Object.keys(interfaces)) {\n\t\t\t\tlet item = interfaces[key][0];\n\t\t\t\tif (!item.internal) {\n\t\t\t\t\tmac = item.mac;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (mac) {\n\t\t\t\tresolve(crypto.createHash('sha256').update(mac + os.homedir(), 'utf8').digest('hex'));\n\t\t\t} else {\n\t\t\t\tresolve(generateGuid());\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tresolve(generateGuid()); // fallback\n\t\t}\n\t});\n}\n\nexport function generateGuid(): string {\n\tlet hexValues: string[] = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n\t// c.f. rfc4122 (UUID version 4 = xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx)\n\tlet oct: string = '';\n\tlet tmp: number;\n\t/* tslint:disable:no-bitwise */\n\tfor (let a: number = 0; a < 4; a++) {\n\t\ttmp = (4294967296 * Math.random()) | 0;\n\t\toct += hexValues[tmp & 0xF] +\n\t\t\thexValues[tmp >> 4 & 0xF] +\n\t\t\thexValues[tmp >> 8 & 0xF] +\n\t\t\thexValues[tmp >> 12 & 0xF] +\n\t\t\thexValues[tmp >> 16 & 0xF] +\n\t\t\thexValues[tmp >> 20 & 0xF] +\n\t\t\thexValues[tmp >> 24 & 0xF] +\n\t\t\thexValues[tmp >> 28 & 0xF];\n\t}\n\n\t// 'Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively'\n\tlet clockSequenceHi: string = hexValues[8 + (Math.random() * 4) | 0];\n\treturn oct.substr(0, 8) + '-' + oct.substr(9, 4) + '-4' + oct.substr(13, 3) + '-' + clockSequenceHi + oct.substr(16, 3) + '-' + oct.substr(19, 12);\n\t/* tslint:enable:no-bitwise */\n}\n\nexport function verifyPlatform(): Thenable<boolean> {\n\tif (os.platform() === 'darwin' && parseFloat(os.release()) < 16.0) {\n\t\treturn Promise.resolve(false);\n\t} else {\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nexport function getErrorMessage(error: Error | string): string {\n\treturn (error instanceof Error) ? error.message : error;\n}\n\nexport function isObjectExplorerContext(object: any): object is sqlops.ObjectExplorerContext {\n\treturn 'connectionProfile' in object && 'isConnectionNode' in object;\n}\n\nexport function getUserHome(): string {\n\treturn process.env.HOME || process.env.USERPROFILE;\n}\n\nexport async function getClusterEndpoint(profileId: string, serviceName: string): Promise<IEndpoint> {\n\n\tlet serverInfo: sqlops.ServerInfo = await sqlops.connection.getServerInfo(profileId);\n\tif (!serverInfo || !serverInfo.options) {\n\t\treturn undefined;\n\t}\n\tlet endpoints: IEndpoint[] = serverInfo.options[constants.clusterEndpointsProperty];\n\tif (!endpoints || endpoints.length === 0) {\n\t\treturn undefined;\n\t}\n\tlet index = endpoints.findIndex(ep => ep.serviceName === serviceName);\n\tif (index === -1) {\n\t\treturn undefined;\n\t}\n\tlet clusterEndpoint: IEndpoint = {\n\t\tserviceName: endpoints[index].serviceName,\n\t\tipAddress: endpoints[index].ipAddress,\n\t\tport: endpoints[index].port\n\t};\n\treturn clusterEndpoint;\n}\n\ninterface IEndpoint {\n\tserviceName: string;\n\tipAddress: string;\n\tport: number;\n}\n\nexport function isValidNumber(maybeNumber: any) {\n\treturn maybeNumber !== undefined\n\t\t&& maybeNumber !== null\n\t\t&& maybeNumber !== ''\n\t\t&& !isNaN(Number(maybeNumber.toString()));\n}\n\n/**\n * Helper to log messages to the developer console if enabled\n * @param msg Message to log to the console\n */\nexport function logDebug(msg: any): void {\n\tlet config = vscode.workspace.getConfiguration(extensionConfigSectionName);\n\tlet logDebugInfo = config[configLogDebugInfo];\n\tif (logDebugInfo === true) {\n\t\tlet currentTime = new Date().toLocaleTimeString();\n\t\tlet outputMsg = '[' + currentTime + ']: ' + msg ? msg.toString() : '';\n\t\tconsole.log(outputMsg);\n\t}\n}\n"]}